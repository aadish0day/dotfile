#!/usr/bin/env bash

BASE_DIR="$HOME/cybersec"

# Function to get existing projects
get_existing_projects() {
    if [ -d "$BASE_DIR" ]; then
        find "$BASE_DIR" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; 2>/dev/null
    fi
}

# Main popup function using fzf
project_popup() {
    # Create options for fzf
    options="Create new project\nUse existing project"
    
    # Use fzf to select option
    choice=$(echo -e "$options" | fzf-tmux -p 50%,30% --prompt="Choose option: " --border --layout=reverse)
    
    case "$choice" in
        "Create new project")
            PROJECT_NAME=$(echo "" | fzf-tmux -p 50%,30% --prompt="Enter new project name: " --border --layout=reverse --print-query | head -1)
            if [ -n "$PROJECT_NAME" ]; then
                echo "Creating new project: $PROJECT_NAME"
            else
                echo "No project name entered. Using default."
            fi
            ;;
        "Use existing project")
            existing_projects=$(get_existing_projects)
            if [[ -n "$existing_projects" ]]; then
                PROJECT_NAME=$(echo "$existing_projects" | fzf-tmux -p 50%,50% --prompt="Select existing project: " --border --layout=reverse)
                if [ -n "$PROJECT_NAME" ] && [ -d "$BASE_DIR/$PROJECT_NAME" ]; then
                    echo "Using existing project: $PROJECT_NAME"
                else
                    echo "No project selected. Using default."
                    PROJECT_NAME=""
                fi
            else
                echo "No existing projects found. Creating new project."
                PROJECT_NAME=$(echo "" | fzf-tmux -p 50%,30% --prompt="Enter new project name: " --border --layout=reverse --print-query | head -1)
            fi
            ;;
        *)
            echo "No option selected. Using default."
            PROJECT_NAME=""
            ;;
    esac
}

# Create both recon and exploit sessions
create_cybersec_sessions() {
    if [ -n "$PROJECT_NAME" ]; then
        # Create project directories
        mkdir -p "$BASE_DIR/$PROJECT_NAME/recon"
        mkdir -p "$BASE_DIR/$PROJECT_NAME/exploits"
        
        RECON_SESSION="recon"
        EXPLOIT_SESSION="exploit"
        RECON_DIR="$BASE_DIR/$PROJECT_NAME/recon"
        EXPLOIT_DIR="$BASE_DIR/$PROJECT_NAME/exploits"
    else
        echo "No project selected. Exiting."
        exit 1
    fi
    
    if [ -n "$TMUX" ]; then
        # Already in tmux - create sessions and switch
        if ! tmux has-session -t "$RECON_SESSION" 2>/dev/null; then
            tmux new-session -d -s "$RECON_SESSION" -c "$RECON_DIR"
        fi
        if ! tmux has-session -t "$EXPLOIT_SESSION" 2>/dev/null; then
            tmux new-session -d -s "$EXPLOIT_SESSION" -c "$EXPLOIT_DIR"
        fi
        tmux switch-client -t "$RECON_SESSION"
    else
        # Not in tmux - create sessions and attach
        if ! tmux has-session -t "$RECON_SESSION" 2>/dev/null; then
            tmux new-session -d -s "$RECON_SESSION" -c "$RECON_DIR"
        fi
        if ! tmux has-session -t "$EXPLOIT_SESSION" 2>/dev/null; then
            tmux new-session -d -s "$EXPLOIT_SESSION" -c "$EXPLOIT_DIR"
        fi
        tmux attach-session -t "$RECON_SESSION"
    fi
}

# Main execution
project_popup
create_cybersec_sessions
